apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nextcloud
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: 'https://nextcloud.github.io/helm/'
    targetRevision: 3.3.3
    helm:
      values: |
        image:
          repository: nextcloud
          tag: 25.0.1-fpm-alpine
          flavor: fpm-alpine
          pullPolicy: IfNotPresent
        ingress:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: traefik
            traefik.ingress.kubernetes.io/router.entrypoints: websecure
            traefik.ingress.kubernetes.io/router.tls: "true"
            traefik.ingress.kubernetes.io/router.middlewares: chowned@file
            hosts:
              - host: nextcloud.chowned.net
                paths:
                  - path: /
                    pathType: Prefix
            tls: {}
        nextcloud:
          host: nextcloud.chowned.net
          existingSecret:
            enabled: true
            secretName: nextcloud-secrets
            usernameKey: nextcloud-username
            passwordKey: nextcloud-password
          extraInitContainers:
          #     - name: wait-database
          #       image: alpine:3.17.0
          #       imagePullPolicy: IfNotPresent
          #       command:
          #         - sh
          #       args:
          #         - -c
          #         - >-
          #           until nc -w 1 -v $MYSQL_HOST:3306 || nc -w 1 -v $POSTGRES_HOST:5432;
          #           do echo "Waiting for database";
          #           done
          #       env:
          #         - name: POSTGRES_HOST
          #           value: pgo-cluster-primary.default.svc
            - name: wait-redis
              image: alpine:3.17.0
              imagePullPolicy: IfNotPresent
              command:
                - sh
              args:
                - -c
                - >-
                  until nc -w 1 -v $REDIS_HOST:$REDIS_HOST_PORT;
                  do echo "Waiting for Redis";
                  done
              env:
                - name: REDIS_HOST
                  value: redis
                - name: REDIS_HOST_PORT
                  value: "6379"
          extraVolumes:
            - name: datastore
              nfs:
                server: "192.168.1.22"
                path: "/datastore/nextcloud/data"
          extraVolumeMounts:
            - name: datastore
              mountPath: /var/www/html/data
        nginx:
          enabled: true
          image:
            repository: nginx
            tag: 1.23-alpine
        internalDatabase:
          enabled: false
        postgresql:
          enabled: true
          global:
            postgresql:
              auth:
                username: "nextcloud"
                database: "nextcloud"
                existingSecret: "nextcloud-secrets"
                secretKeys:
                  adminPasswordKey: "postgres-password"
                  userPasswordKey: "postgres-nextcloud-password"
          primary:
            persistence:
              enabled: true
              size: 50Gi
        redis:
          enabled: true
          auth:
            enabled: true
            existingSecret: "nextcloud-secrets"
            existingSecretPasswordKey: "redis-password"
        cronjob:
          enabled: true      
        persistence:
          enabled: true
        resources:
          limits:
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: nextcloud
        startupProbe:
          enabled: true
    chart: nextcloud
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: nextcloud
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true