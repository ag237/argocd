apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: lidarr
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: 'https://k8s-at-home.com/charts/'
    targetRevision: 14.2.2
    helm:
      values: |
        env:
          TZ: America/New_York
        image:
          repository: ghcr.io/onedr0p/lidarr-develop
          tag: 1.3.4.3458

        ingress:
          main:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: traefik
              traefik.ingress.kubernetes.io/router.entrypoints: websecure
              traefik.ingress.kubernetes.io/router.tls: "true"
              traefik.ingress.kubernetes.io/router.middlewares: chowned@file
            hosts:
              - host: music.chowned.net
                paths:
                  - path: /
                    pathType: Prefix
            tls: {}
        persistence:
          config:
            enabled: true
            storageClass: "rook-ceph-block"
            size: 100Gi
          datastore:
            enabled: true
            type: custom
            volumeSpec:
              nfs:
                server: 192.168.1.22
                path: /datastore
            mountPath: /datastore
        podSecurityContext:
          supplementalGroups:
            - 100
        probes:
          liveness:
            enabled: false
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        podSecurityContext:
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: "OnRootMismatch"
        # securityContext:
        #     runAsUser: 99
        #     runAsGroup: 100
        # initContainers:
        #   update-volume-permission:
        #     image: busybox
        #     # command: ["sh", "-c", "chown -R 99:100 /config"]
        #     command: ["sh", "-c", "sleep 600"]
        #     volumeMounts:
        #       - name: config
        #         mountPath: /config
        #     securityContext:
        #       runAsUser: 0
    chart: lidarr
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: lidarr
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true