kube-prometheus-stack:
  alertmanager:
    ingress:
      enabled: true
      hosts: 
        - alertmanager-k8s.chowned.net
      paths:
      - /
      annotations:
        kubernetes.io/ingress.class: traefik
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.tls.certresolver: namecheap
    alertmanagerSpec:
      useExistingSecret: true
      configSecret: alertmanager-kube-prometheus-stack-alertmanager
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: rook-ceph-block
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Gi
            # selector:
            #   matchLabels:
            #     app: alertmanager
      resources:
        limits:
          cpu: 1000m
          memory: 1024Mi
        requests:
          cpu: 100m
          memory: 100Mi 
    externalUrl: alertmanager-k8s.chowned.net
  grafana:
    deploymentStrategy:
      type: Recreate
    enabled: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          storj:
            datasource: Prometheus
            gnetId: 13810
            revision: 1
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.tls.certresolver: namecheap
      hosts:
        - grafana-k8s.chowned.net
      path: /
    persistence:
      enabled: true
      storageClassName: rook-ceph-block
      size: 50Gi
      # selectorLabels:
      #   app: grafana
    plugins: 
      - grafana-piechart-panel
      - yesoreyeram-boomtable-panel
    serviceMonitor:
      enabled: false
  kubeEtcd:
    serviceMonitor:
      scheme: https
      insecureSkipVerify: true
      caFile: /etc/prometheus/secrets/etcd-client-cert/etcd-ca
      certFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client
      keyFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client-key
  kubeProxy:
    service:
      selector:
        component: kube-proxy
  nodeExporter:
    serviceMonitor:
      relabelings:
      - sourceLabels: [__meta_kubernetes_pod_node_name]
        separator: ;
        regex: ^(.*)$
        targetLabel: hostname
        replacement: $1
        action: replace
  prometheusOperator:
    resources:
      limits:
        cpu: 1000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 100Mi
    configReloaderCpu: 500m
    configReloaderMemory: 32Mi
  prometheus:
    ingress:
      enabled: true
      hosts:
        - prometheus-k8s.chowned.net
      paths:
        - /
      tls: []
      annotations:
        kubernetes.io/ingress.class: traefik
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/router.tls.certresolver: namecheap
    prometheusSpec:
      additionalScrapeConfigsSecret:
        enabled: true
        name: prometheus-additional-scrape-configs
        key: prometheus-additional-scrape-configs.yaml
      externalUrl: "https://prometheus-k8s.chowned.net"
      retention: 365d
      serviceMonitorSelectorNilUsesHelmValues: false
      secrets:
        - etcd-client-cert
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            storageClassName: rook-ceph-block
            resources:
              requests:
                storage: 200Gi
            # selector:
            #   matchLabels:
            #     app: prometheus